version: '3.8'

services:
  postgres:
    hostname: postgres
    image: library/postgres:12-alpine
    container_name: postgres_app_secure-mon
    networks:
      internal:
    volumes:
      - ../postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env

  backend:
    container_name: backend_app_secure-mon
    networks:
      default:
      internal:
    expose:
      - "8000"
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    entrypoint: ./docker/entrypoint/entrypoint.sh
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    volumes:
      - ../:/app
    env_file:
      - ./.env

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: celery_secure-mon
    volumes:
      - ../:/app
    networks:
      default:
      internal:
    entrypoint: ./docker/entrypoint/entrypoint_celery.sh
    env_file:
      - ./.env
    restart: always
    depends_on:
      - redis
      - postgres

  celery_beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    volumes:
      - ../:/app
    networks:
      default:
      internal:
    container_name: celery_beat_secure-mon
    entrypoint: ./docker/entrypoint/entrypoint_beat_celery.sh
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres

  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    networks:
      default:
      internal:
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass  # Redis - result backend

  redis:
    container_name: redis_app_secure-mon
    networks:
      default:
      internal:
    image: redis:alpine
    

networks:
  default:
  internal:
    internal: true

